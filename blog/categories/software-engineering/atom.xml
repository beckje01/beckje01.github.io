<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Software Engineering | Jeff Beck]]></title>
  <link href="http://beckje01.com/blog/categories/software-engineering/atom.xml" rel="self"/>
  <link href="http://beckje01.com/"/>
  <updated>2014-07-01T22:03:09-05:00</updated>
  <id>http://beckje01.com/</id>
  <author>
    <name><![CDATA[Jeff Beck]]></name>
    <email><![CDATA[beckje01@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Grails 2.3.1 Warnings after clean.]]></title>
    <link href="http://beckje01.com/blog/2013/10/23/grails-2-3-1-warnings-after-clean/"/>
    <updated>2013-10-23T04:02:02-05:00</updated>
    <id>http://beckje01.com/blog/2013/10/23/grails-2-3-1-warnings-after-clean</id>
    <content type="html"><![CDATA[<p>If you are running grails 2.3.1 and see the following sequence pop up before you get some odd test failures.</p>

<p>``` sh</p>

<pre><code>$ grails clean
| Application cleaned.

$ grails test-app
| Environment set to test.....
| Warning No config found for the application.
| Warning DataSource.groovy not found, assuming dataSource bean is configured by Spring
</code></pre>

<p>```
Start using package in between and the problem will go away.</p>

<p>``` sh</p>

<pre><code>$ grails clean
| Application cleaned.
$ grails package
| Compiling 10 source files
| Compiling 12 source files.....

$ grails test-app
| Environment set to test.....
| Server running. Browse to http://localhost:8080/api
| Running 6 cucumber tests...
| Completed 6 cucumber tests, 0 failed in 0m 3s
| Server stopped
| Tests PASSED
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cassandra Not Available After Starting]]></title>
    <link href="http://beckje01.com/blog/2012/12/28/cassandra-not-available-after-starting/"/>
    <updated>2012-12-28T04:25:45-06:00</updated>
    <id>http://beckje01.com/blog/2012/12/28/cassandra-not-available-after-starting</id>
    <content type="html"><![CDATA[<p>I’ve been working with the DataStax Enterprise 2.01 install for a bit now and it was working great until one day I was no longer able to get any queries to work using the cqlsh I was just getting the error that one or more nodes was unavailable. I tried restarting and still nothing would work I got a few errors in the logs (shown below).</p>

<p>I was able to quickly fix the error by removing my data directory and starting fresh as this is just my development environment that works great for me. You can find your data directory in the cassandra.yaml file ($DSE_HOME/resources/cassandra/conf/cassandra.yaml), look for the <em>data_file_directories</em> entry. Mine was set to <em>/var/lib/cassandra/data</em> so I just ran the following and started cassandra fresh and everything is back to working order.</p>

<p><code>sh
rm -r /var/lib/cassandra/data
</code></p>

<p>```</p>

<pre><code>INFO [JOB-TRACKER-INIT] 2012-12-28 10:32:32,515 JobTracker.java (line 2427) problem cleaning system directory: cfs:/tmp/hadoop-jeffbeck/mapred/system
java.io.IOException: UnavailableException()
    at com.datastax.bdp.hadoop.cfs.CassandraFileSystemThriftStore.listSubPaths(CassandraFileSystemThriftStore.java:1137)
    at com.datastax.bdp.hadoop.cfs.CassandraFileSystem.listStatus(CassandraFileSystem.java:192)
    at org.apache.hadoop.mapred.JobTracker.&lt;init&gt;(JobTracker.java:2392)
    at org.apache.hadoop.mapred.JobTracker.&lt;init&gt;(JobTracker.java:2195)
    at org.apache.hadoop.mapred.JobTracker.&lt;init&gt;(JobTracker.java:2189)
    at org.apache.hadoop.mapred.JobTracker.startTracker(JobTracker.java:303)
    at org.apache.hadoop.mapred.JobTracker.startTracker(JobTracker.java:294)
    at org.apache.hadoop.mapred.HadoopTrackerPlugin$1.run(HadoopTrackerPlugin.java:230)
    at java.lang.Thread.run(Thread.java:680)
Caused by: UnavailableException()
    at org.apache.cassandra.service.ReadCallback.assureSufficientLiveNodes(ReadCallback.java:212)
    at org.apache.cassandra.service.StorageProxy.scan(StorageProxy.java:1083)
    at org.apache.cassandra.thrift.CassandraServer.get_indexed_slices(CassandraServer.java:746)
    at com.datastax.bdp.hadoop.cfs.CassandraFileSystemThriftStore.listSubPaths(CassandraFileSystemThriftStore.java:1120)
    ... 8 more
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grails Release Plugin External Maven Config
]]></title>
    <link href="http://beckje01.com/blog/2012/10/21/grails-release-plugin-external-maven-config/"/>
    <updated>2012-10-21T09:00:18-05:00</updated>
    <id>http://beckje01.com/blog/2012/10/21/grails-release-plugin-external-maven-config</id>
    <content type="html"><![CDATA[<p>The <a href="http://grails.org/plugin/release">grails release plugin</a> is great for publishing plugins to grails central but it will also publish a plugin to a maven repo. You simple need to configure the new maven repo inside build config. But if you want to release snapshots to an internal maven but not have that config checked in publicly that is a bit more tricky. With a quick bit of code added to BuildConfig.groovy we can have it pull in the config from a file we can choose to not checkin. Now with our public code we don’t need to expose our internal login info. See the file changes below for an example.</p>

<p>Add this to BuildConfig.groovy:</p>

<p>``` groovy</p>

<pre><code>def mavenConfigFile = new File("${basedir}/grails-app/conf/mavenInfo.groovy")
if (mavenConfigFile.exists()) {
    def slurpedMavenInfo = new ConfigSlurper().parse(mavenConfigFile.toURL())
    slurpedMavenInfo.grails.project.repos.each {k, v -&gt;
        println "Adding maven info for repo $k"
        grails.project.repos."$k" = v
    }
}
else {
    println "No mavenInfo file found."
}
</code></pre>

<p>```</p>

<p>Then you can create a file called mavenInfo.groovy:</p>

<p>``` groovy</p>

<pre><code>grails.project.repos.internalSnap.url = 'http://internal.com:8080/nexus/content/repositories/internal-snapshots/'
grails.project.repos.internalSnap.username = 'fakeUser'
grails.project.repos.internalSnap.password = 'fakePass123'
</code></pre>

<p>```</p>

<p>Grab the <a href="http://bit.ly/QAyVhR">gist</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove Addressbar from iPhone Web App]]></title>
    <link href="http://beckje01.com/blog/2010/06/22/remove-addressbar-from-iphone-web-app/"/>
    <updated>2010-06-22T11:55:31-05:00</updated>
    <id>http://beckje01.com/blog/2010/06/22/remove-addressbar-from-iphone-web-app</id>
    <content type="html"><![CDATA[<p>If you are creating a web app for the iPhone there is an easy to to hide the address bar when opening the page from a link on the users home screen. You simply need to add the following meta tag to your<br/>
head. This will also work with the iPad.</p>

<p><code>xml
&lt;meta name="apple-mobile-web-app-capable" content="yes" /&gt;
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Filling an Array with Objects in PHP]]></title>
    <link href="http://beckje01.com/blog/2010/01/28/filling-an-array-with-objects-in-php/"/>
    <updated>2010-01-28T01:29:45-06:00</updated>
    <id>http://beckje01.com/blog/2010/01/28/filling-an-array-with-objects-in-php</id>
    <content type="html"><![CDATA[<p>While working in PHP I found the need to fill an array with new objects on the fly. So at first I tried the array_fill function that worked fine for values but when I tried an object I found it was the same object in every position meaning if I modified one they all changed. What I needed was a new object in each. The easiest way I found to do that was a for loop.</p>

<p>The following doesn’t work correctly</p>

<p><code>php
$arr = array_fill(1,12,new MyObject());
</code>
So to accomplish the same idea I did the following</p>

<p>``` php</p>

<pre><code> $arr=array();

 for($i=1;$i&lt;=12;$i++)
 {
      //Fill Array with new object
      $arr[$i]=new MyObject();
 }
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
