<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Silverlight | Jeff Beck]]></title>
  <link href="http://beckje01.com/blog/categories/silverlight/atom.xml" rel="self"/>
  <link href="http://beckje01.com/"/>
  <updated>2015-11-28T09:49:21-06:00</updated>
  <id>http://beckje01.com/</id>
  <author>
    <name><![CDATA[Jeff Beck]]></name>
    <email><![CDATA[beckje01@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Silverlight Image Error]]></title>
    <link href="http://beckje01.com/blog/2009/04/09/silverlight-image-error/"/>
    <updated>2009-04-09T18:26:16-05:00</updated>
    <id>http://beckje01.com/blog/2009/04/09/silverlight-image-error</id>
    <content type="html"><![CDATA[<p>While working in Silverlight I ran across a error that seemed rather odd, not because it didn’t make sense but that I couldn’t see anything I did wrong. So the error was</p>

<p>Unhandled Error in Silverlight 2 Application App.xap<br/>
Code: 4001<br/>
categories: ImageError<br/>
Message: AG_E_NETWORK_ERROR</p>

<p>While checking the Image tag in the xaml I simply couldn’t find anything wrong with it. It looked very similar to the following xaml. The user.profile_image was of course a full URI that worked fine when written directly in the browser.</p>

<p><code>html
&lt;Image  Grid.Row="0" Margin="0,0,5,0" VerticalAlignment="Top"  Source="{Binding user.profile_image}" &gt;&lt;/Image&gt;
</code></p>

<p>So that leaves me with what could the problem be, well it turned out it was simple I was a using a GIF file so <a href="http://mydomain.com/foo.gif">http://mydomain.com/foo.gif</a> as a source for an image simply doesn’t work as GIF isn’t supported. But really why would Silverlight not use GIF? Well simply converting the GIF to a PNG then Silverlight can handle the image just fine and display it. Although there are some issues as in Silverlight the only 8 bit and fewer PNG formats support transparency. So if the reason you were using a GIF was for transparency you will have to create an 8 bit or lower PNG. Look for a simple how to next post on converting a GIF to a PNG that Silverlight can display properly with transparency.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Silverlight Move Cursor to End of TextBox
]]></title>
    <link href="http://beckje01.com/blog/2009/04/04/silverlight-move-cursor-to-end-of-textbox/"/>
    <updated>2009-04-04T15:46:03-05:00</updated>
    <id>http://beckje01.com/blog/2009/04/04/silverlight-move-cursor-to-end-of-textbox</id>
    <content type="html"><![CDATA[<p>While working on in Silverlight I found the need to auto populate a TextBox then shift focus to that TextBox. That was simple to do with the following code.</p>

<p>``` c#</p>

<pre><code>txtSearch.Focus();
txtSearch.Text = "sometext ";
</code></pre>

<p>```</p>

<p>But then there is a problem the cursor is at the start of the text box so if a user starts typing they end up adding to the start when I want them to just add on to the end. So after some hunting I found the SelectionStart property of the TextBox, while this may be obvious to people who work in Silverlight and C# all the time it didn’t jump right out at me so I thought it was worth talking about. So by using SelectionStart and I can move the cursor to the end and users can just append to my started search text.</p>

<p>``` c#</p>

<pre><code>txtSearch.Focus();
txtSearch.Text = "sometext ";
txtSearch.SelectionStart = txtSearch.Text.Length;
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
